name: Release

on:
  push:
    tags:
      - "*"

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: ${{ github.event.repository.name }}

jobs:
  build-ebpf:
    name: Build eBPF programs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src

      - name: Install bpf-linker
        run: cargo install bpf-linker

      - name: Build eBPF programs
        run: |
          cd jail-ai-ebpf
          cargo +nightly build --release --target=bpfel-unknown-none -Z build-std=core

      - name: Upload eBPF artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ebpf-programs
          path: target/bpfel-unknown-none/release/jail-ai-ebpf
          retention-days: 1

  build:
    name: Build - ${{ matrix.target }}
    needs: build-ebpf
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: x86_64-linux
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            suffix: aarch64-linux

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download eBPF artifacts
        uses: actions/download-artifact@v4
        with:
          name: ebpf-programs
          path: target/bpfel-unknown-none/release/

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build eBPF loader
        run: cargo build --release --package jail-ai-ebpf-loader

      - name: Setup cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build with cross
        run: |
          cross build --release --package jail-ai --target ${{ matrix.target }}
          strip target/${{ matrix.target }}/release/${{ env.BINARY_NAME }} || true

      - name: Package binary
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/${{ env.BINARY_NAME }} dist/${{ env.BINARY_NAME }}-${{ matrix.suffix }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}-${{ matrix.suffix }}
          path: dist/${{ env.BINARY_NAME }}-${{ matrix.suffix }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Create Release
        run: |
          gh release create ${{ github.ref_name }} \
            -t "${{ github.ref_name }}" \
            --generate-notes \
            --latest \
            artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
